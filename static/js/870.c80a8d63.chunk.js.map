{"version":3,"file":"static/js/870.c80a8d63.chunk.js","mappings":"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","sources":["webpack://first-app/./src/components/Login/css/Login.module.css?88c5","components/Login/Login.jsx","webpack://first-app/./src/components/common/FormsControls/css/FormsControls.module.css?ed71","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Login_content__50IZh\",\"header\":\"Login_header__pcNc7\",\"form\":\"Login_form__Oc9OD\",\"inputLogin\":\"Login_inputLogin__4Eo4y\",\"inputPassword\":\"Login_inputPassword__U4-XF\",\"inputCaptcha\":\"Login_inputCaptcha__RyvZo\",\"inputRememberContainer\":\"Login_inputRememberContainer__bEYGQ\",\"captchaContainer\":\"Login_captchaContainer__6X-GE\",\"imageContainer\":\"Login_imageContainer__JtLUq\",\"inputRemember\":\"Login_inputRemember__JFspC\",\"submitContainer\":\"Login_submitContainer__5AFAq\",\"submit\":\"Login_submit__aGhYm\",\"summaryError\":\"Login_summaryError__21UXA\",\"info__looking\":\"Login_info__looking__8IwbC\",\"info__lookingActive\":\"Login_info__lookingActive__hRPBX\",\"info__checkbox\":\"Login_info__checkbox__9O2+C\"};","import { Field, reduxForm } from 'redux-form';\r\nimport style from './css/Login.module.css';\r\nimport { Input, InputAuth, createAuthField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth_reducer.ts';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n\r\n   let [check, setCheck] = useState(false)\r\n   return (\r\n      <form onSubmit={handleSubmit} className={style.form}>\r\n         {createAuthField(InputAuth, [required], 'Email...', 'email', style.inputLogin)}\r\n         {createAuthField(InputAuth, [required], 'Password...', 'password', style.inputPassword, { type: \"password\" })}\r\n\r\n         {captchaUrl &&\r\n            <div className={style.captchaContainer}>\r\n               <div className={style.imageContainer}>\r\n                  <img src={captchaUrl} alt=\"\" />\r\n               </div>\r\n               {createAuthField(InputAuth, [required], 'Are you a robot???', 'captcha', style.inputCaptcha)}\r\n            </div>\r\n         }\r\n\r\n         <div onClick={() => setCheck(!check)} className={check ? style.info__lookingActive : style.info__looking}>\r\n            {createAuthField(InputAuth, [], null, 'rememberMe', style.info__checkbox, { type: 'checkbox' })}\r\n            <label for='rememberMe'>Remember me</label>\r\n         </div>\r\n\r\n         {error && <div className={style.summaryError}>{error}</div>}\r\n         <div className={style.submitContainer}>\r\n            <button className={style.submit}>login</button>\r\n         </div>\r\n      </form>)\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n   const onSubmit = (formData) => {\r\n      props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n   }\r\n\r\n   if (props.isAuth) {\r\n      return <Navigate to={`/profile/${props.userId}`} />\r\n   }\r\n   return (\r\n      <div className={style.content}>\r\n         <div className={style.header}>Welcome</div>\r\n         <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n      </div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   userId: state.auth.userId,\r\n   captchaUrl: state.auth.captchaUrl,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lnsDE\",\"error\":\"FormsControls_error__yDObs\",\"errorMessage\":\"FormsControls_errorMessage__WP70X\",\"formControlAuth\":\"FormsControls_formControlAuth__z+8Az\",\"errorMessageAuth\":\"FormsControls_errorMessageAuth__d6Igt\",\"formControlInfo\":\"FormsControls_formControlInfo__m1dBz\"};","import { Field } from 'redux-form';\r\nimport style from './css/FormsControls.module.css'\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n\r\n         {props.children}\r\n\r\n         {hasError && <div className={style.errorMessage}>\r\n            <span>{meta.error}</span>\r\n         </div>}\r\n      </div >\r\n   )\r\n};\r\nexport const FormControlWithNoError = ({ input, meta, child, ...props }) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n         {props.children}\r\n      </div >\r\n   )\r\n};\r\n\r\n\r\nexport const Textarea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControlWithNoError {...props}><textarea {...input} {...restProps} /></FormControlWithNoError>\r\n};\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\n\r\nexport const InputAuth = ({ input, meta: { touched, error }, child, ...props }) => {\r\n   const hasError = touched && error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n\r\n         <input {...input} {...props} />\r\n\r\n         {hasError && <div className={style.errorMessageAuth}>\r\n            <div>{error}</div>\r\n         </div>}\r\n      </div >\r\n   )\r\n}\r\n\r\nexport const createAuthField = (component, validators, placeholder, name, className, props = {}) => (<Field\r\n   component={component}\r\n   placeholder={placeholder}\r\n   name={name}\r\n   validate={validators}\r\n   className={className}\r\n   {...props} />)\r\n\r\n\r\nexport const InputInfo = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <InfoFormControl {...props}><input {...input} {...restProps} /></InfoFormControl>\r\n};\r\n\r\nexport const InfoFormControl = ({ input, meta, child, ...props }) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={style.formControlInfo + ' ' + (hasError ? style.error : '')} >\r\n\r\n         {props.children}\r\n\r\n         {/* {hasError && <div className={style.errorMessage}>\r\n               <span>{meta.error}</span>\r\n            </div>} */}\r\n      </div >\r\n   )\r\n};\r\n\r\nexport const createInfoField = (component, placeholder, name, className, props = {}) => {\r\n   // debugger;\r\n   return (<Field\r\n      component={component}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      className={className}\r\n      {...props} />)\r\n}","export const required = value => {\r\n   if (value) return undefined;\r\n   return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n   return undefined;\r\n};\r\n"],"names":["LoginReduxForm","reduxForm","form","_ref","handleSubmit","error","captchaUrl","_useState","useState","_useState2","_slicedToArray","check","setCheck","_jsxs","onSubmit","className","style","children","createAuthField","InputAuth","required","type","_jsx","src","alt","onClick","for","connect","state","isAuth","auth","userId","login","props","Navigate","to","concat","formData","email","password","rememberMe","captcha","_ref3","input","_ref3$meta","meta","touched","child","_objectWithoutProperties","_excluded5","hasError","_objectSpread","component","validators","placeholder","name","arguments","length","undefined","Field","validate","InputInfo","restProps","_excluded6","InfoFormControl","_ref4","_excluded7","createInfoField","value"],"sourceRoot":""}