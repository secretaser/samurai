{"version":3,"file":"static/js/204.3a89d4b4.chunk.js","mappings":"sKACA,EAA0B,yBAA1B,EAA6D,yBAA7D,EAAoG,6B,UCApG,EAAuB,4BAAvB,EAAgE,kCAAhE,EAAwG,2BAAxG,EAA0I,4BAA1I,EAA6K,4BAA7K,EAA2N,uC,SCiB3N,EAfsB,SAACA,GACpB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACGC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIJ,EAAMK,UAAW,SAAAC,GAAO,OAAIA,EAAQC,SAAWC,EAAmBA,CAAU,EAACC,SAAA,EACvFC,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAUC,UACvBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKZ,EAAMa,QAASC,IAAI,QAEhCX,EAAAA,EAAAA,MAAA,OAAKG,UAAWG,EAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAWC,SAAEV,EAAMe,QACnCJ,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAsBC,SAAEV,EAAMgB,eAI1D,E,8BCfA,EAAuB,mBAAvB,EAAwD,0BAAxD,EAA+F,yBAA/F,EAAsI,0BAAtI,EAA+K,2BAA/K,EAA4N,8BAA5N,EAAmR,qCAAnR,EAAiU,qBAAjU,EAAoW,0BCApW,EAA+B,8BAA/B,EAAyE,2BCQzE,EAPgB,SAAChB,GACd,OACGW,EAAAA,EAAAA,KAAA,OAAKL,UACFN,EAAMiB,IAAMjB,EAAMkB,OAAST,EAAkBA,EAAmBC,SAAEV,EAAMmB,MAEjF,E,8BCmDA,GAF4BC,E,OAAAA,GAAU,CAAEC,KAAM,cAAlBD,EAhDL,SAACpB,GACrB,IACIsB,EADEC,GAAYC,EAAAA,EAAAA,UAEZC,EAAc,SAACC,GACL,SAATA,EAAEC,KAAmBD,EAAEE,WACxBF,EAAEG,iBACFN,EAAUO,QAAQC,QAExB,GAEAC,EAAAA,EAAAA,YAAU,WAIP,OAHAC,OAAOC,iBAAiB,UAAWT,GACnCQ,OAAOC,iBAAiB,QAASC,GACjCF,OAAOC,iBAAiB,QAASC,GAC1B,WACJF,OAAOG,oBAAoB,UAAWX,GACtCQ,OAAOG,oBAAoB,QAASD,GACpCF,OAAOG,oBAAoB,QAASD,EACvC,CACH,GAAG,IAEH,IAAMA,EAAS,SAACT,GACb,GAAIA,EAAEW,OAAO/B,WAAaG,EAIvB,OAHAa,EAAWI,EAAEW,QACJ5B,MAAM6B,OAAS,WACxBhB,EAASb,MAAM6B,OAAShB,EAASiB,aAAe,MAG7CjB,GAAYI,EAAEW,OAAOG,QAAQ,WAAad,EAAEW,OAAOG,QAAQ,UAAUlC,WAAaG,IACrFa,EAASb,MAAM6B,OAAS,MAE9B,EAEA,OACGnC,EAAAA,EAAAA,MAAA,QAAMG,UAAWG,EAAuBgC,SAAUzC,EAAM0C,aAAahC,SAAA,EAClEC,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACrC,UAAWG,EACfmC,YAAY,uBACZ7B,KAAK,iBACL8B,UAAU,WACVC,SAAU,CAACC,EAAAA,MAEdpC,EAAAA,EAAAA,KAAA,UAAQqC,IAAKzB,EAAWjB,UAAWG,EAAaC,UAC7CC,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAmBwC,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKb,OAAO,KAAI5B,UAACC,EAAAA,EAAAA,KAAA,QAAMyC,EAAE,iaAIrI,ICpBA,EA7Ba,SAACpD,GACX,IAAIqD,EAAWrD,EAAMsD,QAAQC,KAAI,SAAAC,GAAO,OAAI7C,EAAAA,EAAAA,KAAC8C,EAAO,CAACtC,KAAMqC,EAAQrC,KAAMD,OAAQsC,EAAQE,SAAUzC,GAAIjB,EAAMiB,IAAM,IAC7G0C,GAAUnC,EAAAA,EAAAA,WAChBQ,EAAAA,EAAAA,YAAU,WACP2B,EAAQ7B,QAAQ8B,UAAYD,EAAQ7B,QAAQS,YAC/C,GAAG,CAACvC,EAAMsD,UAQV,OACGnD,EAAAA,EAAAA,MAAA,OAAKG,UAAWG,EAAWC,SAAA,EACxBP,EAAAA,EAAAA,MAAA,OAAKG,UAAWG,EAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAiBC,UAC9BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKZ,EAAM6D,KAAKhD,QAASC,IAAI,QAErCH,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAkBC,SAAEV,EAAM6D,KAAK9C,WAElDJ,EAAAA,EAAAA,KAAA,OAAKqC,IAAKW,EAASrD,UAAWG,EAAmBC,SAC7C2C,KAEJ1C,EAAAA,EAAAA,KAACmD,EAAU,CAACrB,SAjBE,SAACsB,GACdA,EAAOC,eAAeC,QACvBjE,EAAMkE,iBAAiBlE,EAAM6D,KAAK3D,GAAI6D,EAAOC,eAAeC,OAAQjE,EAAMiB,GAEhF,MAgBH,ECnBA,GADuBkD,EAAAA,EAAAA,KARD,SAACC,EAAOpE,GAC3B,MAAO,CACJsD,QAAStD,EAAMqE,OAAOf,QACtBO,KAAM7D,EAAMqE,OACZpD,GAAIjB,EAAMiB,GAEhB,GAEgD,CAAEiD,iBAAAA,EAAAA,IAA3BC,CAA+CG,GCiBtE,EAvBgB,SAACtE,GACd,IAAIuE,EAAa,SAACF,GACf,OAAOA,EAAOf,QAAQe,EAAOf,QAAQkB,OAAS,GAAGrD,IACpD,EAEIsD,EAAUzE,EAAMyE,QAAQC,YAAYnB,KAAI,SAAAc,GAAM,OAAI1D,EAAAA,EAAAA,KAACgE,EAAa,CAAC5D,KAAMsD,EAAOtD,KAAMb,GAAImE,EAAOnE,GAAIc,QAASuD,EAAWF,GAASxD,QAASwD,EAAOxD,SAAW,IAC3J+D,EAAQ5E,EAAMyE,QAAQC,YAAYnB,KAAI,SAAAM,GAAI,OAAIlD,EAAAA,EAAAA,KAACkE,EAAAA,GAAK,CAAC5E,KAAI,IAAA6E,OAAMjB,EAAK3D,IAAM6E,SAASpE,EAAAA,EAAAA,KAACqE,EAAc,CAACC,OAAQpB,EAAK3D,GAAImE,OAAQrE,EAAMyE,QAAQC,YAAYb,EAAK3D,IAAKe,GAAIjB,EAAMiB,MAAU,IAExL,OACGd,EAAAA,EAAAA,MAAA,OAAKG,UAAWG,EAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAcC,SAC1B+D,KAEJtE,EAAAA,EAAAA,MAAC+E,EAAAA,GAAM,CAAAxE,SAAA,EACJC,EAAAA,EAAAA,KAACkE,EAAAA,GAAK,CAAC5E,KAAI,IAAO8E,SAASpE,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAkBC,SAAC,0CAG7DkE,OAIb,E,UCdA,GAAeO,E,QAAAA,IACZC,EAAAA,GACAjB,EAAAA,EAAAA,KATmB,SAACC,GACpB,MAAO,CACJK,QAASL,EAAMiB,YACfpE,GAAImD,EAAMkB,KAAKC,OAErB,GAI4B,CAAEC,YAAAA,EAAAA,KAF9B,CAGEC,E,kKCfF,EAA8B,mCAA9B,EAAyE,6BAAzE,EAAqO,wCAArO,EAA+R,uC,0FCmClRC,EAAY,SAAHC,GAA8D,IAAxDC,EAAKD,EAALC,MAAKC,EAAAF,EAAEG,KAAQC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAmBhG,GAAL2F,EAALM,OAAeC,EAAAA,EAAAA,GAAAP,EAAAQ,IACnEC,EAAWL,GAAWC,EAC5B,OACG7F,EAAAA,EAAAA,MAAA,OAAKG,UAAWG,EAAoB,KAAO2F,EAAW3F,EAAc,IAAIC,SAAA,EAErEC,EAAAA,EAAAA,KAAA,SAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWT,GAAW5F,IAErBoG,IAAYzF,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAuBC,UACjDC,EAAAA,EAAAA,KAAA,OAAAD,SAAMsF,QAIlB,EAEaM,EAAkB,SAACzD,EAAW0D,EAAY3D,EAAa7B,EAAMT,GAAS,IAAEN,EAAKwG,UAAAhC,OAAA,QAAAiC,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAM7F,EAAAA,EAAAA,KAACgC,EAAAA,GAAK0D,EAAAA,EAAAA,GAAA,CACxGxD,UAAWA,EACXD,YAAaA,EACb7B,KAAMA,EACN+B,SAAUyD,EACVjG,UAAWA,GACPN,GAAS,EAGH0G,EAAY,SAAC1G,GACvB,IAAQ4F,EAAqC5F,EAArC4F,MAAuBe,GAAc3G,EAA9B8F,KAA8B9F,EAAxBiG,OAAmBC,EAAAA,EAAAA,GAAKlG,EAAK4G,IAClD,OAAOjG,EAAAA,EAAAA,KAACkG,GAAeR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKrG,GAAK,IAAAU,UAAEC,EAAAA,EAAAA,KAAA,SAAA0F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWT,GAAWe,MAC5D,EAEaE,EAAkB,SAAHC,GAAWA,EAALlB,MAAoC,IAA7BE,EAAIgB,EAAJhB,KAAgB9F,GAAL8G,EAALb,OAAeC,EAAAA,EAAAA,GAAAY,EAAAC,IACrDX,EAAWN,EAAKC,SAAWD,EAAKE,MACtC,OACGrF,EAAAA,EAAAA,KAAA,OAAKL,UAAWG,EAAwB,KAAO2F,EAAW3F,EAAc,IAAIC,SAExEV,EAAMU,UAOhB,EAEasG,EAAkB,SAACnE,EAAWD,EAAa7B,EAAMT,GAA2B,IAAhBN,EAAKwG,UAAAhC,OAAA,QAAAiC,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE/E,OAAQ7F,EAAAA,EAAAA,KAACgC,EAAAA,GAAK0D,EAAAA,EAAAA,GAAA,CACXxD,UAAWA,EACXD,YAAaA,EACb7B,KAAMA,EACNT,UAAWA,GACPN,GACV,C,kJClFIiH,EAA6B,SAAC7C,GAAK,MAAM,CAC1C8C,OAAQ9C,EAAMkB,KAAK4B,OACrB,EAEY9B,EAAmB,SAAC+B,GAAe,IACvCC,EAAiB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAlB,UAAA,CAInB,OAJmBmB,EAAAA,EAAAA,GAAAP,EAAA,EAAAzF,IAAA,SAAAiG,MACpB,WACG,OAAKC,KAAK7H,MAAMkH,QACTvG,EAAAA,EAAAA,KAACwG,GAASd,EAAAA,EAAAA,GAAA,GAAKwB,KAAK7H,SADIW,EAAAA,EAAAA,KAACmH,EAAAA,GAAQ,CAACzH,GAAG,UAE/C,KAAC+G,CAAA,CAJmB,CAASW,EAAAA,WAShC,OAFqC5D,EAAAA,EAAAA,IAAQ8C,EAAR9C,CAAoCiD,EAG5E,C,uDCnBO,IAAMrE,EAAW,SAAA6E,GACrB,IAAIA,EACJ,MAAO,mBACV,C","sources":["webpack://first-app/./src/components/Dialogs/css/Dialogs.module.css?fecc","webpack://first-app/./src/components/Dialogs/Dialogs__item/css/Dialogs__item.module.css?1339","components/Dialogs/Dialogs__item/Dialogs__item.jsx","webpack://first-app/./src/components/Dialogs/Chat/css/Chat.module.css?2848","webpack://first-app/./src/components/Dialogs/Message/css/Message.module.css?118c","components/Dialogs/Message/Message.jsx","components/Dialogs/Chat/AddMessage.jsx","components/Dialogs/Chat/Chat.jsx","components/Dialogs/Chat/Chat_container.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","webpack://first-app/./src/components/common/FormsControls/css/FormsControls.module.css?ed71","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__Tkd0C\",\"dialogs\":\"Dialogs_dialogs__2mQnd\",\"placeholder\":\"Dialogs_placeholder__eAL-J\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Dialogs__item_item__KDZqp\",\"itemActive\":\"Dialogs__item_itemActive__PIpf9\",\"ava\":\"Dialogs__item_ava__VmlwK\",\"text\":\"Dialogs__item_text__n5UiQ\",\"name\":\"Dialogs__item_name__hsirp\",\"message_preview\":\"Dialogs__item_message_preview__dCV1U\"};","import { NavLink, Route } from 'react-router-dom';\r\nimport style from './css/Dialogs__item.module.css';\r\n\r\nconst Dialogs__item = (props) => {\r\n   let path = \"/dialogs/\" + props.id;\r\n   return (\r\n      <NavLink to={path} className={navData => navData.isActive ? style.itemActive : style.item}>\r\n         <div className={style.ava}>\r\n            <img src={props.avaLink} alt=\"\" />\r\n         </div>\r\n         <div className={style.text}>\r\n            <div className={style.name}>{props.name}</div>\r\n            <div className={style.message_preview}>{props.lastMes}</div>\r\n         </div>\r\n      </NavLink>\r\n   )\r\n}\r\n\r\nexport default Dialogs__item;","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__pwjoA\",\"chat_header\":\"Chat_chat_header__vluxI\",\"header_ava\":\"Chat_header_ava__hdmh8\",\"header_name\":\"Chat_header_name__CGqa5\",\"chat_content\":\"Chat_chat_content__d1pA+\",\"input_container\":\"Chat_input_container__hxr3p\",\"input_container__input\":\"Chat_input_container__input__GwbRz\",\"button\":\"Chat_button__t5JEw\",\"button__svg\":\"Chat_button__svg__1O11Z\",\"errorMessage\":\"Chat_errorMessage__bEsZQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageOther\":\"Message_messageOther__RGyNg\",\"messageMy\":\"Message_messageMy__UaKLV\"};","import style from './css/Message.module.css';\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={\r\n         props.me == props.sender ? style.messageMy : style.messageOther}>{props.text}</div>\r\n   )\r\n}\r\n\r\nexport default Message;","import { useEffect, useRef } from 'react';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport style from './css/Chat.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n// const maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n   const buttonRef = useRef()\r\n   let textarea;\r\n   const enterHandle = (e) => {\r\n      if (e.key == 'Enter' && !e.shiftKey) {\r\n         e.preventDefault()\r\n         buttonRef.current.click()\r\n      }\r\n   }\r\n\r\n   useEffect(() => {\r\n      window.addEventListener('keydown', enterHandle)\r\n      window.addEventListener('input', handle)\r\n      window.addEventListener('click', handle)\r\n      return () => {\r\n         window.removeEventListener('keydown', enterHandle)\r\n         window.removeEventListener('input', handle)\r\n         window.removeEventListener('click', handle)\r\n      };\r\n   }, []);\r\n\r\n   const handle = (e) => {\r\n      if (e.target.className == style.input_container__input) {\r\n         textarea = e.target\r\n         textarea.style.height = 0 + 'px'\r\n         textarea.style.height = textarea.scrollHeight + 'px'\r\n         return;\r\n      }\r\n      if (!!textarea && e.target.closest('button') && e.target.closest('button').className == style.button) {\r\n         textarea.style.height = 0 + 'px'\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form className={style.input_container} onSubmit={props.handleSubmit}>\r\n         <Field className={style.input_container__input}\r\n            placeholder='Type your message...'\r\n            name='newMessageBody'\r\n            component='textarea'\r\n            validate={[required]}\r\n         />\r\n         <button ref={buttonRef} className={style.button}>\r\n            <svg className={style.button__svg} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"m4.578.33C3.408-.244,2.025-.053,1.056.82.087,1.692-.25,3.048.197,4.272l4.106,7.734L.275,19.733c-.445,1.226-.105,2.58.865,3.45.598.536,1.352.813,2.115.813.477,0,.958-.108,1.407-.329l19.232-11.671L4.578.33Zm-1.577,2.854c-.004-.038.007-.084.062-.133.065-.058.119-.055.157-.043l12.398,7.492H6.9L3.001,3.184Zm.299,17.809c-.039.013-.093.015-.156-.042-.056-.05-.066-.098-.062-.136l3.827-7.314h8.731l-12.339,7.492Z\" /></svg>\r\n         </button>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'addMessage' })(AddMessageForm)\r\n\r\nexport default AddMessageReduxForm;","import React, { useEffect, useRef, useState } from 'react';\r\nimport style from './css/Chat.module.css';\r\nimport Message from './../Message/Message'\r\nimport AddMessage from './AddMessage';\r\n\r\nconst Chat = (props) => {\r\n   let messages = props.mesData.map(message => <Message text={message.text} sender={message.authorID} me={props.me} />);\r\n   const chatRef = useRef()\r\n   useEffect(() => {\r\n      chatRef.current.scrollTop = chatRef.current.scrollHeight\r\n   }, [props.mesData]);\r\n\r\n   let addNewMessage = (values) => {\r\n      if (values.newMessageBody.trim()) {\r\n         props.sendMessageThunk(props.chat.id, values.newMessageBody.trim(), props.me)\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className={style.chat}>\r\n         <div className={style.chat_header}>\r\n            <div className={style.header_ava}>\r\n               <img src={props.chat.avaLink} alt=\"\" />\r\n            </div>\r\n            <div className={style.header_name}>{props.chat.name}</div>\r\n         </div>\r\n         <div ref={chatRef} className={style.chat_content}>\r\n            {messages}\r\n         </div>\r\n         <AddMessage onSubmit={addNewMessage} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Chat;","import { connect } from 'react-redux';\r\nimport { sendMessageThunk } from '../../../redux/dialogs_reducer.ts';\r\nimport Chat from './Chat';\r\n\r\nlet mapStateToProps = (state, props) => {\r\n   return {\r\n      mesData: props.dialog.mesData,\r\n      chat: props.dialog,\r\n      me: props.me\r\n   }\r\n}\r\n\r\nconst Chat_container = connect(mapStateToProps, { sendMessageThunk })(Chat)\r\nexport default Chat_container;","import React from 'react';\r\nimport style from './css/Dialogs.module.css';\r\nimport Dialogs__item from './Dialogs__item/Dialogs__item';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Chat_container from './Chat/Chat_container';\r\n\r\nconst Dialogs = (props) => {\r\n   let getLastMes = (dialog) => {\r\n      return dialog.mesData[dialog.mesData.length - 1].text;\r\n   };\r\n\r\n   let dialogs = props.dialogs.dialogsData.map(dialog => <Dialogs__item name={dialog.name} id={dialog.id} lastMes={getLastMes(dialog)} avaLink={dialog.avaLink} />)\r\n   let chats = props.dialogs.dialogsData.map(chat => <Route path={`/${chat.id}`} element={<Chat_container chatID={chat.id} dialog={props.dialogs.dialogsData[chat.id]} me={props.me} />} />)\r\n\r\n   return (\r\n      <div className={style.content}>\r\n         <div className={style.dialogs}>\r\n            {dialogs}\r\n         </div>\r\n         <Routes>\r\n            <Route path={`/`} element={<div className={style.placeholder}>Choose a dialog and start chatting!</div>}>\r\n\r\n            </Route>\r\n            {chats}\r\n         </Routes>\r\n      </div >\r\n   )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { sendMessage } from '../../redux/dialogs_reducer.ts';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogs: state.dialogsPage,\r\n      me: state.auth.userId,\r\n   }\r\n};\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, { sendMessage }),\r\n)(Dialogs);","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lnsDE\",\"error\":\"FormsControls_error__yDObs\",\"errorMessage\":\"FormsControls_errorMessage__WP70X\",\"formControlAuth\":\"FormsControls_formControlAuth__z+8Az\",\"errorMessageAuth\":\"FormsControls_errorMessageAuth__d6Igt\",\"formControlInfo\":\"FormsControls_formControlInfo__m1dBz\"};","import { Field } from 'redux-form';\r\nimport style from './css/FormsControls.module.css'\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n\r\n         {props.children}\r\n\r\n         {hasError && <div className={style.errorMessage}>\r\n            <span>{meta.error}</span>\r\n         </div>}\r\n      </div >\r\n   )\r\n};\r\nexport const FormControlWithNoError = ({ input, meta, child, ...props }) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n         {props.children}\r\n      </div >\r\n   )\r\n};\r\n\r\n\r\nexport const Textarea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControlWithNoError {...props}><textarea {...input} {...restProps} /></FormControlWithNoError>\r\n};\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\n\r\nexport const InputAuth = ({ input, meta: { touched, error }, child, ...props }) => {\r\n   const hasError = touched && error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n\r\n         <input {...input} {...props} />\r\n\r\n         {hasError && <div className={style.errorMessageAuth}>\r\n            <div>{error}</div>\r\n         </div>}\r\n      </div >\r\n   )\r\n}\r\n\r\nexport const createAuthField = (component, validators, placeholder, name, className, props = {}) => (<Field\r\n   component={component}\r\n   placeholder={placeholder}\r\n   name={name}\r\n   validate={validators}\r\n   className={className}\r\n   {...props} />)\r\n\r\n\r\nexport const InputInfo = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <InfoFormControl {...props}><input {...input} {...restProps} /></InfoFormControl>\r\n};\r\n\r\nexport const InfoFormControl = ({ input, meta, child, ...props }) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={style.formControlInfo + ' ' + (hasError ? style.error : '')} >\r\n\r\n         {props.children}\r\n\r\n         {/* {hasError && <div className={style.errorMessage}>\r\n               <span>{meta.error}</span>\r\n            </div>} */}\r\n      </div >\r\n   )\r\n};\r\n\r\nexport const createInfoField = (component, placeholder, name, className, props = {}) => {\r\n   // debugger;\r\n   return (<Field\r\n      component={component}\r\n      placeholder={placeholder}\r\n      name={name}\r\n      className={className}\r\n      {...props} />)\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Navigate to='/login' />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}","export const required = value => {\r\n   if (value) return undefined;\r\n   return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n   return undefined;\r\n};\r\n"],"names":["props","path","id","_jsxs","NavLink","to","className","navData","isActive","style","children","_jsx","src","avaLink","alt","name","lastMes","me","sender","text","reduxForm","form","textarea","buttonRef","useRef","enterHandle","e","key","shiftKey","preventDefault","current","click","useEffect","window","addEventListener","handle","removeEventListener","target","height","scrollHeight","closest","onSubmit","handleSubmit","Field","placeholder","component","validate","required","ref","xmlns","viewBox","width","d","messages","mesData","map","message","Message","authorID","chatRef","scrollTop","chat","AddMessage","values","newMessageBody","trim","sendMessageThunk","connect","state","dialog","Chat","getLastMes","length","dialogs","dialogsData","Dialogs__item","chats","Route","concat","element","Chat_container","chatID","Routes","compose","withAuthRedirect","dialogsPage","auth","userId","sendMessage","Dialogs","InputAuth","_ref3","input","_ref3$meta","meta","touched","error","child","_objectWithoutProperties","_excluded5","hasError","_objectSpread","createAuthField","validators","arguments","undefined","InputInfo","restProps","_excluded6","InfoFormControl","_ref4","_excluded7","createInfoField","mapStateToPropsForRedirect","isAuth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","value","this","Navigate","React"],"sourceRoot":""}