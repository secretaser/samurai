{"version":3,"file":"static/js/870.517af176.chunk.js","mappings":"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","sources":["webpack://first-app/./src/components/Login/css/Login.module.css?88c5","components/Login/Login.jsx","webpack://first-app/./src/components/common/FormsControls/css/FormsControls.module.css?ed71","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Login_content__50IZh\",\"header\":\"Login_header__pcNc7\",\"form\":\"Login_form__Oc9OD\",\"inputLogin\":\"Login_inputLogin__4Eo4y\",\"inputPassword\":\"Login_inputPassword__U4-XF\",\"inputRememberContainer\":\"Login_inputRememberContainer__bEYGQ\",\"inputRemember\":\"Login_inputRemember__JFspC\",\"submitContainer\":\"Login_submitContainer__5AFAq\",\"submit\":\"Login_submit__aGhYm\",\"summaryError\":\"Login_summaryError__21UXA\"};","import { Field, reduxForm } from 'redux-form';\r\nimport style from './css/Login.module.css';\r\nimport { Input, InputAuth, createAuthField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth_reducer';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n   return (\r\n      <form onSubmit={handleSubmit} className={style.form}>\r\n         {createAuthField(InputAuth, [required], 'Email...', 'email', style.inputLogin)}\r\n         {createAuthField(InputAuth, [required], 'Password...', 'password', style.inputPassword, { type: \"password\" })}\r\n         <div className={style.inputRememberContainer}>\r\n            {createAuthField(InputAuth, [], null, 'rememberMe', style.inputRemember, { type: \"checkbox\" })}\r\n            <p>Remember me</p>\r\n         </div>\r\n         {error && <div className={style.summaryError}>{error}</div>}\r\n         <div className={style.submitContainer}>\r\n            <button className={style.submit}>login</button>\r\n         </div>\r\n      </form>)\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n   const onSubmit = (formData) => {\r\n      console.log(formData);\r\n      props.login(formData.email, formData.password, formData.rememberMe)\r\n   }\r\n\r\n   if (props.isAuth) {\r\n      return <Navigate to={`/profile/${props.userId}`} />\r\n   }\r\n   return (\r\n      <div className={style.content}>\r\n         <div className={style.header}>Wellcum</div>\r\n         <LoginReduxForm onSubmit={onSubmit} />\r\n      </div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   userId: state.auth.userId,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lnsDE\",\"error\":\"FormsControls_error__yDObs\",\"errorMessage\":\"FormsControls_errorMessage__WP70X\",\"formControlAuth\":\"FormsControls_formControlAuth__z+8Az\",\"errorMessageAuth\":\"FormsControls_errorMessageAuth__d6Igt\"};","import { Field } from 'redux-form';\r\nimport style from './css/FormsControls.module.css'\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n\r\n         {props.children}\r\n\r\n         {/* {hasError && <div className={style.errorMessage}>\r\n            <span>{meta.error}</span>\r\n         </div>} */}\r\n      </div >\r\n   )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\n\r\nexport const InputAuth = ({ input, meta: { touched, error }, child, ...props }) => {\r\n   const hasError = touched && error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n\r\n         <input {...input} {...props} />\r\n\r\n         {hasError && <div className={style.errorMessageAuth}>\r\n            <div>{error}</div>\r\n         </div>}\r\n      </div >\r\n   )\r\n}\r\n\r\nexport const createAuthField = (component, validators, placeholder, name, className, props = {}) => (<Field\r\n   component={component}\r\n   placeholder={placeholder}\r\n   name={name}\r\n   validate={validators}\r\n   className={className}\r\n   {...props} />)","export const required = value => {\r\n   if (value) return undefined;\r\n   return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n   return undefined;\r\n};\r\n"],"names":["LoginReduxForm","reduxForm","form","_ref","handleSubmit","error","_jsxs","onSubmit","className","style","children","createAuthField","InputAuth","required","type","_jsx","connect","state","isAuth","auth","userId","login","props","Navigate","to","concat","formData","console","log","email","password","rememberMe","FormControl","input","meta","child","_objectWithoutProperties","_excluded","hasError","touched","Textarea","restProps","_excluded2","_objectSpread","_ref2","_ref2$meta","_excluded4","component","validators","placeholder","name","arguments","length","undefined","Field","validate","value","maxLengthCreator","maxLength"],"sourceRoot":""}