{"version":3,"file":"static/js/204.b9bf66e3.chunk.js","mappings":"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","sources":["webpack://first-app/./src/components/Dialogs/css/Dialogs.module.css?fecc","webpack://first-app/./src/components/Dialogs/Dialogs__item/css/Dialogs__item.module.css?1339","components/Dialogs/Dialogs__item/Dialogs__item.jsx","webpack://first-app/./src/components/Dialogs/Chat/css/Chat.module.css?2848","webpack://first-app/./src/components/Dialogs/Message/css/Message.module.css?118c","components/Dialogs/Message/Message.jsx","components/Dialogs/Chat/AddMessage.jsx","components/Dialogs/Chat/Chat.jsx","components/Dialogs/Chat/Chat_container.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","webpack://first-app/./src/components/common/FormsControls/css/FormsControls.module.css?ed71","components/common/FormsControls/FormsControls.jsx","hoc/withAuthRedirect.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__Tkd0C\",\"dialogs\":\"Dialogs_dialogs__2mQnd\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Dialogs__item_item__KDZqp\",\"itemActive\":\"Dialogs__item_itemActive__PIpf9\",\"ava\":\"Dialogs__item_ava__VmlwK\",\"text\":\"Dialogs__item_text__n5UiQ\",\"name\":\"Dialogs__item_name__hsirp\",\"message_preview\":\"Dialogs__item_message_preview__dCV1U\"};","import { NavLink, Route } from 'react-router-dom';\r\nimport style from './css/Dialogs__item.module.css';\r\n\r\nconst Dialogs__item = (props) => {\r\n   let path = \"/dialogs/\" + props.id;\r\n   return (\r\n      <NavLink to={path} className={navData => navData.isActive ? style.itemActive : style.item}>\r\n         <div className={style.ava}>\r\n            <img src={props.avaLink} alt=\"\" />\r\n         </div>\r\n         <div className={style.text}>\r\n            <div className={style.name}>{props.name}</div>\r\n            <div className={style.message_preview}>{props.lastMes}</div>\r\n         </div>\r\n      </NavLink>\r\n   )\r\n}\r\n\r\nexport default Dialogs__item;","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__pwjoA\",\"chat_header\":\"Chat_chat_header__vluxI\",\"header_ava\":\"Chat_header_ava__hdmh8\",\"header_name\":\"Chat_header_name__CGqa5\",\"chat_content\":\"Chat_chat_content__d1pA+\",\"input_container\":\"Chat_input_container__hxr3p\",\"errorMessage\":\"Chat_errorMessage__bEsZQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageOther\":\"Message_messageOther__RGyNg\",\"messageMy\":\"Message_messageMy__UaKLV\"};","import style from './css/Message.module.css';\r\n\r\nconst Message = (props) => {\r\n   return (\r\n      <div className={\r\n         props.me.id == props.sender ? style.messageMy : style.messageOther}>{props.text}</div>\r\n   )\r\n}\r\n\r\nexport default Message;","import { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport style from './css/Chat.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form className={style.input_container} onSubmit={props.handleSubmit}>\r\n         <Field placeholder='Type your message...'\r\n            name={'newMessageBody'}\r\n            component={'textarea'}\r\n            // component={Textarea}\r\n            validate={[required, maxLength50]}\r\n         />\r\n         <button>Send</button>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'addMessage' })(AddMessageForm)\r\n\r\nexport default AddMessageReduxForm;","import React from 'react';\r\nimport style from './css/Chat.module.css';\r\nimport Message from './../Message/Message'\r\nimport AddMessage from './AddMessage';\r\n\r\nconst Chat = (props) => {\r\n   let messages = props.mesData.map(message => <Message text={message.text} sender={message.authorID} me={props.me} />);\r\n\r\n   let addNewMessage = (values) => {\r\n      props.sendMessage(props.chat.id, values.newMessageBody);\r\n   }\r\n\r\n   return (\r\n      <div className={style.chat}>\r\n         <div className={style.chat_header}>\r\n            <div className={style.header_ava}>\r\n               <img src={props.chat.avaLink} alt=\"\" />\r\n            </div>\r\n            <div className={style.header_name}>{props.chat.name}</div>\r\n         </div>\r\n         <div className={style.chat_content}>\r\n            {messages}\r\n         </div>\r\n         <AddMessage onSubmit={addNewMessage} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Chat;","import { connect } from 'react-redux';\r\nimport { sendMessage } from '../../../redux/dialogs_reducer';\r\nimport Chat from './Chat';\r\n\r\nlet mapStateToProps = (state, props) => {\r\n   return {\r\n      mesData: props.dialog.mesData,\r\n      chat: props.dialog,\r\n      me: props.me\r\n   }\r\n}\r\n\r\nconst Chat_container = connect(mapStateToProps, { sendMessage })(Chat)\r\nexport default Chat_container;","import React from 'react';\r\nimport style from './css/Dialogs.module.css';\r\nimport Dialogs__item from './Dialogs__item/Dialogs__item';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Chat_container from './Chat/Chat_container';\r\n\r\nconst Dialogs = (props) => {\r\n   // debugger;\r\n   let getLastMes = (dialog) => {\r\n      return dialog.mesData[dialog.mesData.length - 1].text;\r\n   };\r\n\r\n   let dialogs = props.dialogs.dialogsData.map(dialog => <Dialogs__item name={dialog.name} id={dialog.id} lastMes={getLastMes(dialog)} avaLink={dialog.avaLink} />)\r\n   let chats = props.dialogs.dialogsData.map(chat => <Route path={`/${chat.id}`} element={<Chat_container chatID={chat.id} dialog={props.dialogs.dialogsData[chat.id]} me={props.me} />} />)\r\n\r\n   return (\r\n      <div className={style.content}>\r\n         <div className={style.dialogs}>\r\n            {dialogs}\r\n         </div>\r\n         <Routes>\r\n            {chats}\r\n         </Routes>\r\n      </div >\r\n   )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { sendMessage } from '../../redux/dialogs_reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogs: state.dialogsPage,\r\n      me: state.me,\r\n   }\r\n};\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, { sendMessage }),\r\n)(Dialogs);","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__lnsDE\",\"error\":\"FormsControls_error__yDObs\",\"errorMessage\":\"FormsControls_errorMessage__WP70X\",\"formControlAuth\":\"FormsControls_formControlAuth__z+8Az\",\"errorMessageAuth\":\"FormsControls_errorMessageAuth__d6Igt\"};","import { Field } from 'redux-form';\r\nimport style from './css/FormsControls.module.css'\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n   const hasError = meta.touched && meta.error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n\r\n         {props.children}\r\n\r\n         {/* {hasError && <div className={style.errorMessage}>\r\n            <span>{meta.error}</span>\r\n         </div>} */}\r\n      </div >\r\n   )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\nexport const Input = (props) => {\r\n   const { input, meta, child, ...restProps } = props;\r\n   return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\n\r\nexport const InputAuth = ({ input, meta: { touched, error }, child, ...props }) => {\r\n   const hasError = touched && error\r\n   return (\r\n      <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n\r\n         <input {...input} {...props} />\r\n\r\n         {hasError && <div className={style.errorMessageAuth}>\r\n            <div>{error}</div>\r\n         </div>}\r\n      </div >\r\n   )\r\n}\r\n\r\nexport const createAuthField = (component, validators, placeholder, name, className, props = {}) => (<Field\r\n   component={component}\r\n   placeholder={placeholder}\r\n   name={name}\r\n   validate={validators}\r\n   className={className}\r\n   {...props} />)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Navigate to='/login' />\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n}","export const required = value => {\r\n   if (value) return undefined;\r\n   return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n   if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n   return undefined;\r\n};\r\n"],"names":["props","path","id","_jsxs","NavLink","to","className","navData","isActive","style","children","_jsx","src","avaLink","alt","name","lastMes","me","sender","text","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","validate","required","messages","mesData","map","message","Message","authorID","chat","AddMessage","values","sendMessage","newMessageBody","connect","state","dialog","Chat","getLastMes","length","dialogs","dialogsData","Dialogs__item","chats","Route","concat","element","Chat_container","chatID","Routes","compose","withAuthRedirect","dialogsPage","Dialogs","FormControl","_ref","input","meta","child","_objectWithoutProperties","_excluded","hasError","touched","error","Textarea","restProps","_excluded2","_objectSpread","InputAuth","_ref2","_ref2$meta","_excluded4","createAuthField","validators","arguments","undefined","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","_createClass","key","value","this","Navigate","React","maxLength"],"sourceRoot":""}